set nocompatible
filetype off

" Setup Vundle
set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

Bundle 'gmarik/vundle'

" Code completion
Plugin 'Valloric/YouCompleteMe'

" Tern
Plugin 'marijnh/tern_for_vim'

" Create your own text objects
Bundle 'kana/vim-textobj-user'

" Syntax checking hacks for vim
Bundle 'scrooloose/syntastic'

" Vim plugin for the_silver_searcher, ag
Bundle 'rking/ag.vim'

" CSS Comb
Bundle 'git://github.com/csscomb/vim-csscomb.git'

" Vim script for text filtering and alignment
Bundle 'godlygeek/tabular'

" Neat Status Line Plugin
Bundle 'cloud8421/vim-neatstatus'

" Indent guides
Bundle 'nathanaelkane/vim-indent-guides'

" Fuzzy file, buffer, mru, tag, etc finder.
Bundle 'kien/ctrlp.vim'

" A tree explorer plugin for vim.
Bundle 'scrooloose/nerdtree'

" Emmet mode for VIM 
Bundle 'mattn/emmet-vim'

" extended % matching for HTML, LaTeX, and many other languages
Bundle 'tmhedberg/matchit'

" An extensible & universal comment vim-plugin that also handles embedded
" filetypes
Bundle 'vim-scripts/tComment'

" easily search for, substitute, and abbreviate multiple variants of a word
Bundle 'tpope/vim-abolish'

" provides mappings to easily delete, change and add such surroundings in
" pairs.
Bundle 'tpope/vim-surround'

" vim plugin to interact with tmux
Bundle 'benmills/vimux'

" Vim Markdown runtime files
Bundle 'tpope/vim-markdown'

" Ruby on Rails power tools
Bundle 'tpope/vim-rails'

" wisely add end in ruby, endfunction/endif/more in vim script, etc
Bundle 'tpope/vim-endwise'

"Lightweight support for Ruby's Bundler
"Bundle 'tpope/vim-bundler'

" rake.vim: it's like rails.vim without the rails
" Bundle 'tpope/vim-rake'

" Ruby highlighting 
Bundle 'vim-ruby/vim-ruby'

" A custom text object for selecting ruby blocks.
Bundle 'nelstrom/vim-textobj-rubyblock'

" run ruby tests using vimux
" Bundle 'pgr0ss/vimux-ruby-test'

" Turbo Ruby testing with tmux
" Bundle 'jgdavey/vim-turbux'

" pairs of handy bracket mappings
Bundle 'tpope/vim-unimpaired'

" For instance if you type an '(', ``autoclose`` will automatically insert a
" ')' and put the cursor between
Bundle 'jiangmiao/auto-pairs'  

" Auto close (X)HTML tags
" Bundle 'vim-scripts/closetag.vim'
Bundle 'alvan/vim-closetag'

" switching between a single-line statement and a multi-line one.
Bundle 'AndrewRadev/splitjoin.vim'

" A Vim plugin that always highlights the enclosing html/xml tags
Bundle 'valloric/MatchTagAlways'

" Javascript syntax highlighting 
Bundle 'pangloss/vim-javascript'

" ES6 Syntax highlighting 
Bundle 'jussi-kalliokoski/harmony.vim'

" JSX syntax highlighting
Bundle 'mxw/vim-jsx'

" JSON support
Bundle 'helino/vim-json'

" Taskpaper operations and highlighting
Bundle 'davidoc/taskpaper.vim'

" CS syntax highlighting
" Bundle 'kchmck/vim-coffee-script'

" Molokai color theme
Bundle 'tomasr/molokai'

" BClear theme
Bundle 'vim-scripts/bclear'
Bundle 'Lokaltog/vim-distinguished'

" Mustache/handlebars syntax highlighting 
Bundle 'mustache/vim-mustache-handlebars'

" Elixir - get on the hype train choo cooo!
Bundle 'elixir-lang/vim-elixir'


set nobackup
set nowritebackup
set notimeout
set ttimeout
set ttimeoutlen=10
set noswapfile                    " It's 2016, Vim."
set history=50
set ruler         " show the cursor position all the time
set showcmd       " display incomplete commands
set incsearch     " do incremental searching
set hlsearch      " highlight the search results
set laststatus=2  " Always display the status line
syntax on

set spelllang=en
set spellfile=$HOME/.vim/spell/en.utf-8.add

" Allow switching buffers without saving
set hidden

" Fix backspace
set backspace=indent,eol,start
fixdel

" Send more characters for redraws
set ttyfast
set lazyredraw
set t_ut= " improve screen clearing by using the background color

" Use Bash as shell
set shell=/usr/local/bin/bash

" Enable mouse use in all modes
set mouse=a
set ttymouse=xterm2

filetype plugin indent on

" Softtabs, 2 spaces
set tabstop=2
set shiftwidth=2
set expandtab

" Display extra whitespace
set list listchars=tab:»·,trail:·

" Clipboard fix for OsX
set clipboard=unnamed

" Numbers
set number
set numberwidth=2

"Folding
set foldmethod=indent
set foldlevelstart=99

" Autocompletion options
set wildmode=list:longest,list:full
set complete=.,w,b,u,t

" Ignore bundler and sass cache
set wildignore+=*/vendor/gems/*,*/vendor/cache/*,*/.bundle/*,*/.sass-cache/*

" When spellcheck is enabled, autocomplete from dictionary
set complete+=kspell

" Tags
let Tlist_Ctags_Cmd = "/usr/local/bin/ctags -R --exclude=.git --exclude=log -f ./.tags *"
set tags+=.tags

if exists("+undofile")
  " undofile - This allows you to use undos after exiting and restarting
  " This, like swap and backups, uses .vim-undo first, then ~/.vim/undo
  " :help undo-persistence
  " This is only present in 7.3+
  if isdirectory($HOME . '/.vim/undo') == 0
    :silent !mkdir -p ~/.vim/undo > /dev/null 2>&1
  endif
  set undodir=./.vim-undo//
  set undodir+=~/.vim/undo//
  set undofile
endif

source $HOME/.vim/autocommands.vim
source $HOME/.vim/plugins.vim
source $HOME/.vim/shortcuts.vim
source $HOME/.vim/rails.vim
source $HOME/.vim/syntax.vim
source $HOME/.vim/tmux.vim
source $HOME/.vim/visual_fixes.vim
